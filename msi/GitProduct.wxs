<?xml version='1.0'?>

<?if $(sys.BUILDARCH)=x64 ?>
  <?define SixtyFourBit=64 ?>
<?else?>
  <?define SixtyFourBit ?>
<?endif?>

<Wix xmlns='http://wixtoolset.org/schemas/v4/wxs'
     xmlns:netfx="http://schemas.microsoft.com/wix/NetFxExtension"
     xmlns:swid='http://wixtoolset.org/schemas/v4/wxs/tag'>
  <Product Id='*' Name='Git for Windows' Language='1033' Manufacturer='The Git Development Community'
           Version='$(var.Version)'
           UpgradeCode='abbb3e1d-fea0-4b84-9585-b4dc13cbc1b4'>
    <Package InstallScope='perMachine' Compressed='yes' Keywords='Git' />
    <swid:Tag Regid='git-for-windows.github.io' />

    <MajorUpgrade DowngradeErrorMessage='A newer version of [ProductName] is already installed.' Schedule="afterInstallInitialize" />
    <MediaTemplate CabinetTemplate='git{0}.cab' CompressionLevel='high' EmbedCab='yes' />
    <Icon Id='git.ico' SourceFile='git.ico' />

    <!-- Add/Remove Programs Properties -->
    <Property Id='ARPNOMODIFY' Value='1' />
    <Property Id='ARPCONTACT' Value='https://github.com/git-for-windows/git/wiki/Contact' />
    <Property Id='ARPURLINFOABOUT' Value='https://git-for-windows.github.io/' />
    <Property Id='ARPPRODUCTICON' Value='git.ico' />
    <SetProperty Id='ARPINSTALLLOCATION' Value='[INSTALLFOLDER]' After='CostFinalize' />

    <!-- Other MSI specific properties -->
    <Property Id='MSIFASTINSTALL' Value='7' />

    <!-- WiX Properties -->
    <PropertyRef Id="WIX_IS_NETFRAMEWORK_451_OR_LATER_INSTALLED" />

    <!-- Git for Windows MSI Properties -->
    <SetProperty Id="BindImagePaths" Value="[INSTALLFOLDER]usr\bin;[MingwFolder]bin;[System$(var.SixtyFourBit)Folder]" After="CostFinalize" />

    <Property Id="CLI" Value="Unset" />
    <Property Id="GfwCliEnvironment" Value="Cmd" />
    <Property Id="CLIENVIRONMENT" Value="Cmd" />
    <Property Id="CLIENVIRONMENTSEARCH">
      <RegistrySearch Id="CliEnvironmentSearch" Root="HKLM" Key="SOFTWARE\GitForWindows" Name="CliEnvironment" Type="raw" />
    </Property>
    <SetProperty Id="GfwCliEnvironment" Value="[CLIENVIRONMENTSEARCH]" Action="SetGfwCliEnvironmentUsingPreviouslyInstalledValue" After="AppSearch" Sequence="first">
      (WIX_UPGRADE_DETECTED OR REINSTALL) AND (CLIENVIRONMENTSEARCH~="Bash" OR CLIENVIRONMENTSEARCH~="Cmd" OR CLIENVIRONMENTSEARCH~="CmdTools")
    </SetProperty>
    <SetProperty Id="GfwCliEnvironment" Value="[CLI]" Action="SetGfwCliEnvironmentFromCommandLine" After="SetGfwCliEnvironmentUsingPreviouslyInstalledValue" Sequence="first">
      CLI~="Bash" OR CLI~="Cmd" OR CLI~="CmdTools"
    </SetProperty>
    <SetProperty Id="GfwCliEnvironment" Value="Bash" Action="NormalizeCaseGfwCliEnvironmentBash" After="SetGfwCliEnvironmentFromCommandLine" Sequence="first">
      GfwCliEnvironment~="Bash"
    </SetProperty>
    <SetProperty Id="GfwCliEnvironment" Value="Cmd" Action="NormalizeCaseGfwCliEnvironmentCmd" After="SetGfwCliEnvironmentFromCommandLine" Sequence="first">
      GfwCliEnvironment~="Cmd"
    </SetProperty>
    <SetProperty Id="GfwCliEnvironment" Value="CmdTools" Action="NormalizeCaseGfwCliEnvironmentCmdTools" After="SetGfwCliEnvironmentFromCommandLine" Sequence="first">
      GfwCliEnvironment~="CmdTools"
    </SetProperty>
    <SetProperty Action="SetBashCliEnvironmentPaths" Id="CLIENVIRONMENTPATHS" Value="{}" Before="InstallValidate" Sequence="execute">
      GfwCliEnvironment = "Bash"
    </SetProperty>
    <SetProperty Action="SetCmdCliEnvironmentPaths" Id="CLIENVIRONMENTPATHS" Value="[INSTALLFOLDER]cmd" Before="InstallValidate" Sequence="execute">
      GfwCliEnvironment = "Cmd"
    </SetProperty>
    <SetProperty Action="SetCmdToolsCliEnvironmentPaths" Id="CLIENVIRONMENTPATHS" Value="[INSTALLFOLDER]cmd;[MingwFolder]bin;[INSTALLFOLDER]usr\bin" Before="InstallValidate" Sequence="execute">
      GfwCliEnvironment = "CmdTools"
    </SetProperty>
    <SetProperty Id="CLIENVIRONMENT" Value="[GfwCliEnvironment]" Before="CostFinalize" Sequence="first" />

    <Property Id="AUTOCRLF" Value="Unset" />
    <Property Id="GfwLineEndings" Value="true" />
    <Property Id="SkipGitLineEndingsDlg" Value="No" />
    <Property Id="LINEENDINGS" Value="true" />
    <Property Id="LINEENDINGSSEARCH">
      <RegistrySearch Id="LineEndingsSearch" Root="HKLM" Key="SOFTWARE\GitForWindows" Name="core.autocrlf" Type="raw" />
    </Property>
    <SetProperty Id="GfwLineEndings" Value="[LINEENDINGSSEARCH]" Action="SetGfwLineEndingsUsingPreviouslyInstalledValue" After="AppSearch" Sequence="first">
      (WIX_UPGRADE_DETECTED OR REINSTALL) AND (LINEENDINGSSEARCH~="true" OR LINEENDINGSSEARCH~="input" OR LINEENDINGSSEARCH~="false")
    </SetProperty>
    <SetProperty Id="GfwLineEndings" Value="[AUTOCRLF]" Action="SetGfwLineEndingsFromCommandLine" After="SetGfwLineEndingsUsingPreviouslyInstalledValue" Sequence="first">
      AUTOCRLF~="true" OR AUTOCRLF~="input" OR AUTOCRLF~="false"
    </SetProperty>
    <SetProperty Id="GfwLineEndings" Value="true" Action="NormalizeCaseGfwLineEndingsTrue" After="SetGfwLineEndingsFromCommandLine" Sequence="first">GfwLineEndings~="true"</SetProperty>
    <SetProperty Id="GfwLineEndings" Value="input" Action="NormalizeCaseGfwLineEndingsInput" After="SetGfwLineEndingsFromCommandLine" Sequence="first">GfwLineEndings~="input"</SetProperty>
    <SetProperty Id="GfwLineEndings" Value="false" Action="NormalizeCaseGfwLineEndingsFalse" After="SetGfwLineEndingsFromCommandLine" Sequence="first">GfwLineEndings~="false"</SetProperty>
    <SetProperty Id="LINEENDINGS" Value="[GfwLineEndings]" Before="CostFinalize" Sequence="first" />
    <SetProperty Id="SkipGitLineEndingsDlg" Value="Yes" Before="CostFinalize" Sequence="ui">
      NOT GfwLineEndings="true" OR AUTOCRLF~="true" OR AUTOCRLF~="input" OR AUTOCRLF~="false"
    </SetProperty>

    <Property Id="CONSOLE" Value="Unset" />
    <Property Id="GfwTerminal" Value="MinTTY" />
    <Property Id="TERMINAL" Value="MinTTY" />
    <Property Id="TERMINALSEARCH">
      <RegistrySearch Id="TerminalSearch" Root="HKLM" Key="SOFTWARE\GitForWindows" Name="Terminal" Type="raw" />
    </Property>
    <SetProperty Id="GfwTerminal" Value="[TERMINALSEARCH]" Action="SetGfwTerminalUsingPreviouslyInstalledValue" After="AppSearch" Sequence="first">
      WIX_UPGRADE_DETECTED AND (TERMINALSEARCH~="MinTTY" OR TERMINALSEARCH~="CmdPrompt")
    </SetProperty>
    <SetProperty Id="GfwTerminal" Value="[CONSOLE]" Action="SetGfwTerminalFromCommandLine" After="SetGfwTerminalUsingPreviouslyInstalledValue" Sequence="first">
      CONSOLE~="MinTTY" OR CONSOLE~="CmdPrompt"
    </SetProperty>
    <SetProperty Id="GfwTerminal" Value="MinTTY" Action="NormalizeCaseGfwTerminalMinTTY" After="SetGfwTerminalFromCommandLine" Sequence="first">GfwTerminal~="MinTTY"</SetProperty>
    <SetProperty Id="GfwTerminal" Value="CmdPrompt" Action="NormalizeCaseGfwTerminalCmdPrompt" After="SetGfwTerminalFromCommandLine" Sequence="first">GfwTerminal~="CmdPrompt"</SetProperty>
    <SetProperty Id="TERMINAL" Value="[GfwTerminal]" Before="CostFinalize" Sequence="first" />

    <Property Id="USEFSCACHE" Value="Unset" />
    <Property Id="GfwEnableFsCache" Value="true" />
    <Property Id="ENABLEFSCACHE" Value="true" />
    <Property Id="FSCACHESEARCH">
      <RegistrySearch Id="EnableFsCacheSearch" Root="HKLM" Key="SOFTWARE\GitForWindows" Name="core.fscache" Type="raw" />
    </Property>
    <SetProperty Id="GfwEnableFsCache" Value="[FSCACHESEARCH]" Action="SetGfwEnableFsCacheUsingPreviouslyInstalledValue" After="AppSearch" Sequence="first">
      (WIX_UPGRADE_DETECTED OR REINSTALL) AND (FSCACHESEARCH~="true" OR FSCACHESEARCH~="false" OR FSCACHESEARCH~="yes" OR FSCACHESEARCH~="no" OR FSCACHESEARCH~="on" OR FSCACHESEARCH~="off" OR FSCACHESEARCH="0" OR FSCACHESEARCH="1")
    </SetProperty>
    <SetProperty Id="GfwEnableFsCache" Value="[USEFSCACHE]" Action="SetGfwEnableFsCacheFromCommandLine" After="SetGfwEnableFsCacheUsingPreviouslyInstalledValue" Sequence="first">
      USEFSCACHE~="true" OR USEFSCACHE~="false" OR USEFSCACHE~="yes" OR USEFSCACHE~="no" OR USEFSCACHE~="on" OR USEFSCACHE~="off" OR USEFSCACHE="1" OR USEFSCACHE="0"
    </SetProperty>
    <SetProperty Id="GfwEnableFsCache" Value="true" Action="NormalizeGfwEnableFsCacheTrue" After="SetGfwEnableFsCacheFromCommandLine" Sequence="first">
      GfwEnableFsCache~="true" OR GfwEnableFsCache~="yes" OR GfwEnableFsCache~="on" OR GfwEnableFsCache="1"
    </SetProperty>
    <SetProperty Id="GfwEnableFsCache" Value="false" Action="NormalizeGfwEnableFsCacheFalse" After="SetGfwEnableFsCacheFromCommandLine" Sequence="first">
      GfwEnableFsCache~="false" OR GfwEnableFsCache~="no" OR GfwEnableFsCache~="off" OR GfwEnableFsCache="0"
    </SetProperty>
    <SetProperty Id="ENABLEFSCACHE" Value="[GfwEnableFsCache]" Before="CostFinalize" Sequence="first" />
    <SetProperty Id="ENABLEFSCACHE" Value="{}" Action="ClearENABLEFSCACHEOnFullUIInstallIfFalse" After="SetENABLEFSCACHE" Sequence="ui">
      UILevel = 5 AND ENABLEFSCACHE="false"
    </SetProperty>
    <SetProperty Id="ENABLEFSCACHE" Value="false" Action="SetENABLEFSCACHEToFalseIfItDoesNotExistAfterUISequenceIsComplete" Before="InstallValidate" Sequence="execute">NOT ENABLEFSCACHE</SetProperty>

    <Property Id="USEGCM" Value="Unset" />
    <Property Id="GfwEnableGcm" Value="1" />
    <Property Id="ENABLEGCM" Value="1" />
    <Property Id="GCMSEARCH">
      <RegistrySearch Id="EnableGcmSearch" Root="HKLM" Key="SOFTWARE\GitForWindows" Name="EnableGcm" Type="raw" />
    </Property>
    <SetProperty Id="GfwEnableGcm" Value="[GCMSEARCH]" Action="SetGfwEnableGcmUsingPreviouslyInstalledValue" After="AppSearch" Sequence="first">
      (WIX_UPGRADE_DETECTED OR REINSTALL) AND (GCMSEARCH="#1" OR GCMSEARCH="#0")
    </SetProperty>
    <SetProperty Id="GfwEnableGcm" Value="[USEGCM]" Action="SetGfwEnableGcmFromCommandLine" After="SetGfwEnableGcmUsingPreviouslyInstalledValue" Sequence="first">
      USEGCM~="true" OR USEGCM~="false" OR USEGCM~="yes" OR USEGCM~="no" OR USEGCM~="on" OR USEGCM~="off" OR USEGCM="1" OR USEGCM="0"
    </SetProperty>
    <SetProperty Id="GfwEnableGcm" Value="1" Action="NormalizeGfwEnableGcmTrue" After="SetWIX_IS_NETFRAMEWORK_451_OR_LATER_INSTALLED" Sequence="first">
      GfwEnableGcm~="true" OR GfwEnableGcm~="yes" OR GfwEnableGcm~="on" OR GfwEnableGcm="1" OR GfwEnableGcm="#1"
    </SetProperty>
    <SetProperty Id="GfwEnableGcm" Value="0" Action="NormalizeGfwEnableGcmIfFalseOrSetFalseIfNetFx451NotInstalled" After="SetWIX_IS_NETFRAMEWORK_451_OR_LATER_INSTALLED" Sequence="first">
      NOT WIX_IS_NETFRAMEWORK_451_OR_LATER_INSTALLED OR GfwEnableGcm~="false" OR GfwEnableGcm~="no" OR GfwEnableGcm~="off" OR GfwEnableGcm="0" OR GfwEnableGcm="#0"
    </SetProperty>
    <SetProperty Id="ENABLEGCM" Value="[GfwEnableGcm]" Before="CostFinalize" Sequence="first" />
    <SetProperty Id="ENABLEGCM" Value="{}" Action="ClearENABLEGCMIfFalseAndFullUIInstall" After="SetENABLEGCM" Sequence="ui">
      UILevel = 5 AND ENABLEGCM = 0
    </SetProperty>
    <SetProperty Id="ENABLEGCM" Value="0" Action="SetENABLEGCMToZeroIfItDoesNotExistAfterUISequenceIsComplete" Before="InstallValidate" Sequence="execute">NOT ENABLEGCM</SetProperty>

    <Property Id="GITBASHHERE" Value="1" />
    <Property Id="GITGUIHERE" Value="1" />
    <Property Id="ASSOCIATEGITFILES" Value="1" />
    <Property Id="GITBASHHEREDESKTOPICON" Value="0" />
    <Property Id="GITGUIHEREDESKTOPICON" Value="0" />

    <Feature Id='Git'>
      <Component Directory='INSTALLFOLDER'>
        <RegistryValue Root='HKLM' Key='SOFTWARE\GitForWindows' Name='InstallFolder' Value='[INSTALLFOLDER]' Type='string' />
        <RemoveFolder Directory='GitProgramMenuFolder' On='uninstall' />
      </Component>
      <Component Directory="INSTALLFOLDER">
        <RegistryValue Root="HKLM" Key="Software\GitForWindows" Name="CurrentVersion" Type="string" Value="$(var.Version)" />
      </Component>
      <Component Directory="INSTALLFOLDER">
        <RegistryValue Root="HKLM" Key="SOFTWARE\GitForWindows" Name="LibexecPath" Type="string" Value="[MingwFolder]libexec\git-core" />
      </Component>
      <Component Directory="INSTALLFOLDER">
        <RegistryValue Action='write' Type='string' Root='HKLM' Key='SOFTWARE\GitForWindows' Name='CliEnvironment' Value='[CLIENVIRONMENT]' KeyPath="yes" />
        <Environment Name="PATH" Value="[CLIENVIRONMENTPATHS]" Action="set" Part="last" System="yes" />
      </Component>
      <Component Directory='INSTALLFOLDER'>
        <RegistryValue Action='write' Type='string' Root='HKLM' Key='SOFTWARE\GitForWindows' Name='core.autocrlf' Value='[LINEENDINGS]' />
      </Component>
      <Component Directory='INSTALLFOLDER'>
        <RegistryValue Action='write' Type='string' Root='HKLM' Key='SOFTWARE\GitForWindows' Name='Terminal' Value='[TERMINAL]' />
      </Component>
      <Component Directory='INSTALLFOLDER'>
        <RegistryValue Action='write' Type='string' Root='HKLM' Key='SOFTWARE\GitForWindows' Name='core.fscache' Value='[ENABLEFSCACHE]' />
      </Component>
      <Component Directory='INSTALLFOLDER'>
        <RegistryValue Action='write' Type='integer' Root='HKLM' Key='SOFTWARE\GitForWindows' Name='EnableGcm' Value='[ENABLEGCM]' />
      </Component>
      <Component Directory='INSTALLFOLDER'>
        <RegistryValue Action='write' Type='integer' Root='HKLM' Key='SOFTWARE\GitForWindows' Name='GitBashHere' Value='[GITBASHHERE]' />
      </Component>
      <Component Directory='INSTALLFOLDER'>
        <RegistryValue Action='write' Type='integer' Root='HKLM' Key='SOFTWARE\GitForWindows' Name='GitGuiHere' Value='[GITGUIHERE]' />
      </Component>
      <Component Directory='INSTALLFOLDER'>
        <RegistryValue Action='write' Type='integer' Root='HKLM' Key='SOFTWARE\GitForWindows' Name='AssociateGitFiles' Value='[ASSOCIATEGITFILES]' />
      </Component>
      <Component Directory='INSTALLFOLDER'>
        <RegistryValue Action='write' Type='integer' Root='HKLM' Key='SOFTWARE\GitForWindows' Name='GitBashHereDesktopIcon' Value='[GITBASHHEREDESKTOPICON]' />
      </Component>
      <Component Directory='INSTALLFOLDER'>
        <RegistryValue Action='write' Type='integer' Root='HKLM' Key='SOFTWARE\GitForWindows' Name='GitGuiHereDesktopIcon' Value='[GITGUIHEREDESKTOPICON]' />
      </Component>

      <Feature Id="AssociateGitFiles" Level="3" Title="Windows Explorer Git File Associations" Description="Associate .git* configuration files with the default text editor." Absent="allow" AllowAdvertise="no" TypicalDefault="install">
        <Condition Level="0"><![CDATA[ASSOCIATEGITFILES <> 1]]></Condition>
        <Condition Level="1">ASSOCIATEGITFILES = 1</Condition>
        <Component Directory="INSTALLFOLDER">
          <RegistryValue Action="write" Type="string" Root="HKLM" Key="SOFTWARE\Classes\.gitattributes" Value="txtfile" />
        </Component>
        <Component Directory="INSTALLFOLDER">
          <RegistryValue Action="write" Type="string" Root="HKLM" Key="SOFTWARE\Classes\.gitattributes" Name="Content Type" Value="text/plain" />
        </Component>
        <Component Directory="INSTALLFOLDER">
          <RegistryValue Action="write" Type="string" Root="HKLM" Key="SOFTWARE\Classes\.gitattributes" Name="PerceivedType" Value="text" />
        </Component>
        <Component Directory="INSTALLFOLDER">
          <RegistryValue Action="write" Type="string" Root="HKLM" Key="SOFTWARE\Classes\.gitignore" Value="txtfile" />
        </Component>
        <Component Directory="INSTALLFOLDER">
          <RegistryValue Action="write" Type="string" Root="HKLM" Key="SOFTWARE\Classes\.gitignore" Name="Content Type" Value="text/plain" />
        </Component>
        <Component Directory="INSTALLFOLDER">
          <RegistryValue Action="write" Type="string" Root="HKLM" Key="SOFTWARE\Classes\.gitignore" Name="PerceivedType" Value="text" />
        </Component>
        <Component Directory="INSTALLFOLDER">
          <RegistryValue Action="write" Type="string" Root="HKLM" Key="SOFTWARE\Classes\.gitmodules" Value="txtfile" />
        </Component>
        <Component Directory="INSTALLFOLDER">
          <RegistryValue Action="write" Type="string" Root="HKLM" Key="SOFTWARE\Classes\.gitmodules" Name="Content Type" Value="text/plain" />
        </Component>
        <Component Directory="INSTALLFOLDER">
          <RegistryValue Action="write" Type="string" Root="HKLM" Key="SOFTWARE\Classes\.gitmodules" Name="PerceivedType" Value="text" />
        </Component>
      </Feature>

      <ComponentGroupRef Id='GitComponents'/>
    </Feature>

    <CustomActionRef Id="ExecPostInstallBat" />
    <CustomActionRef Id="WixBroadcastEnvironmentChange" />

    <UIRef Id="WixUI_Common" />
    <UIRef Id="WixUI_ErrorProgressText" />
    <UIRef Id="GitUI" />
  </Product>

  <Fragment>
    <Directory Id='TARGETDIR' Name='SourceDir'>
      <Directory Id='ProgramFiles$(var.SixtyFourBit)Folder' Name='PFiles'>
        <Directory Id='INSTALLFOLDER' Name='Git'>
          <Directory Id='BinFolder' Name='bin' />
        <?if $(var.SixtyFourBit)=64 ?>
          <Directory Id='MingwFolder' Name='mingw64' />
        <?else?>
          <Directory Id='MingwFolder' Name='mingw32' />
        <?endif?>
        </Directory>
      </Directory>

      <Directory Id='ProgramMenuFolder'>
        <Directory Id='GitProgramMenuFolder' Name='Git' />
      </Directory>
    </Directory>
  </Fragment>

  <Fragment>
    <!-- WiX Variable Overrides (or new variable definitions

         These can be used to override the default UI graphics, for example.
    -->
    <WixVariable Id='WixUIBannerBmp' Value='assets/bannerbmp.bmp' />
    <WixVariable Id='WixUIDialogBmp' Value='assets/dlgbmp.bmp' />
    <WixVariable Id='WixUIExclamationIco' Value='assets/exclamic.ico' />
    <WixVariable Id='WixUIInfoIco' Value='assets/Info.ico' />
    <WixVariable Id='WixUINewIco' Value='assets/NewFolder.ico' />
    <WixVariable Id='WixUIUpIco' Value='assets/OneLevelUp.ico' />
    <WixVariable Id='GitUICompleteSetupIco' Value='assets/completi.ico' />
    <WixVariable Id='GitUICustomSetupIco' Value='assets/custicon.ico' />
    <WixVariable Id='GitUIInstallIco' Value='assets/insticon.ico' />
    <WixVariable Id='GitUIRemoveIco' Value='assets/removico.ico' />
    <WixVariable Id='GitUIRepairIco' Value='assets/repairic.ico' />

    <!-- Set the License file for the License Agreement Dialog -->
    <WixVariable Id='WixUILicenseRtf' Value='gpl-2.0.rtf'/>

    <UI Id='GitUI'>
      <!-- Custom Icon and Bitmap UI resources -->
      <Binary Id="completi" SourceFile="!(wix.GitUICompleteSetupIco)" />
      <Binary Id="custicon" SourceFile="!(wix.GitUICustomSetupIco)" />
      <Binary Id="insticon" SourceFile="!(wix.GitUIInstallIco)" />
      <Binary Id="removico" SourceFile="!(wix.GitUIRemoveIco)" />
      <Binary Id="repairic" SourceFile="!(wix.GitUIRepairIco)" />

      <!-- UI Text Font Sstyles -->
      <TextStyle Id='DlgFont8' FaceName='Tahoma' Size='8' />
      <TextStyle Id='WixUI_Font_Normal' FaceName='Tahoma' Size='8' />
      <TextStyle Id='DlgFontBold8' FaceName='Tahoma' Size='8' Bold='yes' />
      <TextStyle Id="WixUI_Font_Title" FaceName="Tahoma" Size="8" Bold="yes" />
      <TextStyle Id='VerdanaBold13' FaceName='Verdana' Size='13' Bold='yes' />
      <TextStyle Id="WixUI_Font_Bigger" FaceName="Verdana" Size="13" Bold="yes" />

      <!-- Additional Properties for UI -->
      <Property Id="DefaultUIFont" Value="WixUI_Font_Normal" />

      <!-- These dialogs are required, but are not referenced directly by other dilaogs. -->
      <DialogRef Id="ErrorDlg" />
      <DialogRef Id="FatalError" />
      <DialogRef Id="CancelDlg" />
      <DialogRef Id="FilesInUse" />
      <DialogRef Id="MsiRMFilesInUse" />
      <DialogRef Id="PrepareDlg" />
      <DialogRef Id="ProgressDlg" />
      <DialogRef Id="ResumeDlg" />
      <DialogRef Id="UserExit" />
      <DialogRef Id="GitMaintenanceTypeDlg"/>

      <!-- WiX's UI extensibility allows you to orchestrate the flow of your installer dialogs. -->
      <Publish Dialog="ExitDialog" Control="Finish" Event="EndDialog" Value="Return" Order="999">1</Publish>

      <Publish Dialog="WelcomeDlg" Control="Next" Event="NewDialog" Value="LicenseAgreementDlg">NOT Installed AND NOT PATCH</Publish>
      <Publish Dialog="WelcomeDlg" Control="Next" Event="NewDialog" Value="VerifyReadyDlg">Installed AND PATCH</Publish>

      <Publish Dialog="LicenseAgreementDlg" Control="Back" Event="NewDialog" Value="WelcomeDlg">1</Publish>
      <Publish Dialog="LicenseAgreementDlg" Control="Next" Event="NewDialog" Value="InstallDirDlg" Order="2">LicenseAccepted = "1"</Publish>

      <Publish Dialog="InstallDirDlg" Control="Back" Event="NewDialog" Value="LicenseAgreementDlg">1</Publish>

      <!-- TODO: Update event conditions to respond appropriately for various installation scenarios. -->
      <Publish Dialog="InstallDirDlg" Control="Next" Event="SetTargetPath" Value="[WIXUI_INSTALLDIR]" Order="1">1</Publish>
      <Publish Dialog="InstallDirDlg" Control="Next" Event="DoAction" Value="WixUIValidatePath" Order="2">NOT WIXUI_DONTVALIDATEPATH</Publish>
      <Publish Dialog="InstallDirDlg" Control="Next" Event="SpawnDialog" Value="InvalidDirDlg" Order="3"><![CDATA[NOT WIXUI_DONTVALIDATEPATH AND WIXUI_INSTALLDIR_VALID<>"1"]]></Publish>
      <Publish Dialog="InstallDirDlg" Control="Next" Event="NewDialog" Value="GitChooseEnvironmentDlg" Order="99">WIXUI_DONTVALIDATEPATH OR WIXUI_INSTALLDIR_VALID="1"</Publish>
      <Publish Dialog="InstallDirDlg" Control="ChangeFolder" Property="_BrowseProperty" Value="[WIXUI_INSTALLDIR]" Order="1">1</Publish>
      <Publish Dialog="InstallDirDlg" Control="ChangeFolder" Event="SpawnDialog" Value="BrowseDlg" Order="2">1</Publish>
      <Property Id="WIXUI_INSTALLDIR" Value="INSTALLFOLDER" />

      <Publish Dialog="GitChooseEnvironmentDlg" Control="Back" Event="NewDialog" Value="InstallDirDlg">1</Publish>
      <Publish Dialog="GitChooseEnvironmentDlg" Control="Next" Event="NewDialog" Value="GitLineEndingsDlg">SkipGitLineEndingsDlg = "No"</Publish>
      <Publish Dialog="GitChooseEnvironmentDlg" Control="Next" Event="NewDialog" Value="GitCustomizeLineEndingsDlg">SkipGitLineEndingsDlg = "Yes"</Publish>

      <Publish Dialog="GitLineEndingsDlg" Control="Back" Event="NewDialog" Value="GitChooseEnvironmentDlg">1</Publish>
      <Publish Dialog="GitLineEndingsDlg" Control="Next" Event="NewDialog" Value="GitCustomizeLineEndingsDlg">CustomizeLineEndings = "Yes"</Publish>
      <Publish Dialog="GitLineEndingsDlg" Control="Next" Event="NewDialog" Value="GitChooseTerminalDlg">CustomizeLineEndings = "No"</Publish>

      <Publish Dialog="GitCustomizeLineEndingsDlg" Control="Back" Event="NewDialog" Value="GitLineEndingsDlg">SkipGitLineEndingsDlg = "No"</Publish>
      <Publish Dialog="GitCustomizeLineEndingsDlg" Control="Back" Event="NewDialog" Value="GitChooseEnvironmentDlg">SkipGitLineEndingsDlg = "Yes"</Publish>
      <Publish Dialog="GitCustomizeLineEndingsDlg" Control="Next" Event="NewDialog" Value="GitChooseTerminalDlg">1</Publish>

      <Publish Dialog="GitChooseTerminalDlg" Control="Back" Event="NewDialog" Value="GitLineEndingsDlg">CustomizeLineEndings = "No" AND SkipGitLineEndingsDlg = "No"</Publish>
      <Publish Dialog="GitChooseTerminalDlg" Control="Back" Event="NewDialog" Value="GitCustomizeLineEndingsDlg">CustomizeLineEndings = "Yes" OR SkipGitLineEndingsDlg = "Yes"</Publish>
      <Publish Dialog="GitChooseTerminalDlg" Control="Next" Event="NewDialog" Value="GitAdditionalOptionsDlg">1</Publish>

      <Publish Dialog="GitAdditionalOptionsDlg" Control="Back" Event="NewDialog" Value="GitChooseTerminalDlg">1</Publish>
      <Publish Dialog="GitAdditionalOptionsDlg" Control="Next" Event="NewDialog" Value="GitShellOptionsDlg">1</Publish>

      <Publish Dialog="GitShellOptionsDlg" Control="Back" Event="NewDialog" Value="GitAdditionalOptionsDlg">1</Publish>
      <Publish Dialog="GitShellOptionsDlg" Control="Next" Event="NewDialog" Value="VerifyReadyDlg">1</Publish>

      <!--TODO: Fix VerifyReadyDlg back button :: it doesn't work; obviously, the condition is not evaluating to True and I did something wrong...-->
      <Publish Dialog="VerifyReadyDlg" Control="Back" Event="NewDialog" Value="GitShellOptionsDlg" Order="1">NOT Installed</Publish>
      <Publish Dialog="VerifyReadyDlg" Control="Back" Event="NewDialog" Value="WelcomeDlg" Order="1">Installed AND PATCH</Publish>
      <Publish Dialog="VerifyReadyDlg" Control="Back" Event="NewDialog" Value="GitMaintenanceTypeDlg" Order="2">Installed AND NOT PATCH</Publish>

      <Publish Dialog="MaintenanceWelcomeDlg" Control="Next" Event="NewDialog" Value="GitMaintenanceTypeDlg">1</Publish>

      <Publish Dialog="GitMaintenanceTypeDlg" Control="RepairButton" Event="NewDialog" Value="VerifyReadyDlg" Order="4">1</Publish>
      <Publish Dialog="GitMaintenanceTypeDlg" Control="RemoveButton" Event="NewDialog" Value="VerifyReadyDlg" Order="4">1</Publish>
      <Publish Dialog="GitMaintenanceTypeDlg" Control="Back" Event="NewDialog" Value="MaintenanceWelcomeDlg">1</Publish>

      <InstallUISequence>
        <Show Dialog="WelcomeDlg" After="CostFinalize" />
      </InstallUISequence>

    </UI>
  </Fragment>

  <Fragment>
  <?if $(sys.BUILDARCH)=x64 ?>
    <SetProperty Id="ExecConfigurePackSizeLimit" Value='"[#BashExe]" -c "value=\"$$(git config --system pack.packsizelimit)\" &amp;&amp; if test 2g = \"$value\"; then git config --system --unset pack.packsizelimit; fi"' Sequence="execute" Before="ExecConfigurePackSizeLimit"><![CDATA[ REMOVE <> "ALL" ]]></SetProperty>
    <CustomAction Id="ExecConfigurePackSizeLimit" BinaryKey="WixCA" DllEntry="WixQuietExec$(var.SixtyFourBit)" Execute="deferred" Return="ignore" Impersonate="no" />
  <?endif?>
    <SetProperty Id="ExecConfigureSslCAInfo" Value='"[#BashExe]" -c "git config --system http.sslCAinfo \"/[#ca_bundle.crt]\""' Sequence="execute" Before="ExecConfigureSslCAInfo"><![CDATA[ REMOVE <> "ALL" ]]></SetProperty>
    <CustomAction Id="ExecConfigureSslCAInfo" BinaryKey="WixCA" DllEntry="WixQuietExec$(var.SixtyFourBit)" Execute="deferred" Return="ignore" Impersonate="no" />
    <SetProperty Id="ExecConfigureCoreAutoCrlf" Value='"[#GitExe]" config --system core.autocrlf [LINEENDINGS]' Sequence="execute" Before="ExecConfigureCoreAutoCrlf"><![CDATA[ REMOVE <> "ALL" ]]></SetProperty>
    <CustomAction Id="ExecConfigureCoreAutoCrlf" BinaryKey="WixCA" DllEntry="WixQuietExec$(var.SixtyFourBit)" Execute="deferred" Return="ignore" Impersonate="no" />
    <SetProperty Id="ExecConfigureFsCache" Value='"[#GitExe]" config --system core.fscache [ENABLEFSCACHE]' Sequence="execute" Before="ExecConfigureFsCache"><![CDATA[ REMOVE <> "ALL" ]]></SetProperty>
    <CustomAction Id="ExecConfigureFsCache" BinaryKey="WixCA" DllEntry="WixQuietExec$(var.SixtyFourBit)" Execute="deferred" Return="ignore" Impersonate="no" />
    <SetProperty Id="ExecConfigureGcm" Value='"[#GitExe]" config --system credential.helper manager' Sequence="execute" Before="ExecConfigureGcm"><![CDATA[ REMOVE <> "ALL" AND ENABLEGCM=1 ]]></SetProperty>
    <CustomAction Id="ExecConfigureGcm" BinaryKey="WixCA" DllEntry="WixQuietExec$(var.SixtyFourBit)" Execute="deferred" Return="ignore" Impersonate="no" />
    <SetProperty Id="ExecEditGitBash" Value='"[#EditGitBash]" "[#GitBash]" "SHOW_CONSOLE=1 APPEND_QUOTE=1 @@COMSPEC@@ /S /C \"\"@@EXEPATH@@\usr\bin\bash.exe\" --login -i"' Sequence="execute" Before="ExecEditGitBash"><![CDATA[ (REMOVE <> "ALL" OR NOT REINSTALL) AND TERMINAL = "CmdPrompt" ]]></SetProperty>
    <CustomAction Id="ExecEditGitBash" BinaryKey="WixCA" DllEntry="WixQuietExec$(var.SixtyFourBit)" Execute="deferred" Return="check" Impersonate="no" />
    <SetProperty Id="DeleteEditGitBash" Value='"[System$(var.SixtyFourBit)Folder]cmd.exe" /S /C del "[#EditGitBash]"' Sequence="execute" Before="DeleteEditGitBash"><![CDATA[ (REMOVE <> "ALL" OR NOT REINSTALL) AND TERMINAL = "CmdPrompt" ]]></SetProperty>
    <CustomAction Id="DeleteEditGitBash" BinaryKey="WixCA" DllEntry="WixQuietExec$(var.SixtyFourBit)" Execute="deferred" Return="ignore" Impersonate="no" />
    <!-- Schedule two "best effort" actions:
          1. Write the command to run the post-install.bat to the transaction log
          2. Execute the command during the installation transaction
    -->
    <SetProperty Id="ExecPostInstallBat" Value='"[System$(var.SixtyFourBit)Folder]cmd.exe" /c "[#PostInstallBat]"' Sequence="execute" Before="ExecPostInstallBat"><![CDATA[ REMOVE <> "ALL" ]]></SetProperty>
    <CustomAction Id="ExecPostInstallBat" BinaryKey="WixCA" DllEntry="WixQuietExec$(var.SixtyFourBit)" Execute="deferred" Return="ignore" Impersonate="no" />

    <InstallExecuteSequence>
    <?if $(sys.BUILDARCH)=x64 ?>
      <Custom Action="ExecConfigurePackSizeLimit" Before="ExecConfigureSslCAInfo"><![CDATA[ REMOVE <> "ALL" ]]></Custom>
    <?endif?>
      <Custom Action="ExecConfigureSslCAInfo" Before="ExecConfigureCoreAutoCrlf"><![CDATA[ REMOVE <> "ALL" ]]></Custom>
      <Custom Action="ExecConfigureCoreAutoCrlf" Before="ExecConfigureFsCache"><![CDATA[ REMOVE <> "ALL" ]]></Custom>
      <Custom Action="ExecConfigureFsCache" Before="ExecConfigureGcm"><![CDATA[ REMOVE <> "ALL" ]]></Custom>
      <Custom Action="ExecConfigureGcm" Before="ExecEditGitBash"><![CDATA[ REMOVE <> "ALL" AND ENABLEGCM=1 ]]></Custom>
      <Custom Action="ExecEditGitBash" Before="DeleteEditGitBash"><![CDATA[ TERMINAL = "CmdPrompt" AND (REMOVE <> "ALL" OR NOT REINSTALL) ]]></Custom>
      <Custom Action="DeleteEditGitBash" Before="ExecPostInstallBat"><![CDATA[ TERMINAL = "CmdPrompt" AND (REMOVE <> "ALL" OR NOT REINSTALL) ]]></Custom>
      <!-- Execute the post-install.bat at the end of the installation transaction on install and repair but not removal. -->
      <Custom Action="ExecPostInstallBat" Before="InstallFinalize"><![CDATA[ REMOVE <> "ALL" ]]></Custom>
    </InstallExecuteSequence>
  </Fragment>
</Wix>
